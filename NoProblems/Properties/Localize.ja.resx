<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Mod_Description" xml:space="preserve">
    <value>問題のアイコン通知を無効化します</value>
  </data>
  <data name="Mod_WhatsNewMessage2_0" xml:space="preserve">
    <value>[UPDATED] Added Plaza &amp; Promenades DLC support.
[UPDATED] Add new notifications from several last DLCs.
[NEW] Added ability to hide normal notification, but show major notifications.
[NEW] Added shortcut for toggling notifications visibility.
[UPDATED] Using Harmony instead of old patching system.</value>
  </data>
  <data name="Mod_WhatsNewMessage2_1" xml:space="preserve">
    <value>[UPDATED] Added the ability to remove problem flags at all, which will affect buildings behavior. Could be set in the mod settings.
[TRANSLATION] Added Romanian translation.</value>
  </data>
  <data name="Settings_AirportGroup" xml:space="preserve">
    <value>空港エリアの通知</value>
  </data>
  <data name="Settings_CampusGroup" xml:space="preserve">
    <value>キャンパスエリアの通知</value>
  </data>
  <data name="Settings_DisableAll" xml:space="preserve">
    <value>全て無効化</value>
  </data>
  <data name="Settings_DisableEntireGrope" xml:space="preserve">
    <value>グループ全体で無効化</value>
  </data>
  <data name="Settings_DisastersGroup" xml:space="preserve">
    <value>災害関係の通知</value>
  </data>
  <data name="Settings_EnableAll" xml:space="preserve">
    <value>全て有効化</value>
  </data>
  <data name="Settings_EnableEntireGrope" xml:space="preserve">
    <value>グループ全体で有効化</value>
  </data>
  <data name="Settings_FishingGroup" xml:space="preserve">
    <value>漁業関係の通知</value>
  </data>
  <data name="Settings_GeneralGroup" xml:space="preserve">
    <value>全般的な通知</value>
  </data>
  <data name="Settings_IndustryGroup" xml:space="preserve">
    <value>産業エリアの通知</value>
  </data>
  <data name="Settings_NotConnectedGroup" xml:space="preserve">
    <value>未接続の通知</value>
  </data>
  <data name="Settings_OtherGroup" xml:space="preserve">
    <value>その他の通知</value>
  </data>
  <data name="Settings_ParksGroup" xml:space="preserve">
    <value>パークエリアの通知</value>
  </data>
  <data name="Settings_PedestrianGroup" xml:space="preserve">
    <value>歩行者エリアの通知</value>
  </data>
  <data name="Settings_СonsumptionGroup" xml:space="preserve">
    <value>消費関係の通知</value>
  </data>
  <data name="Setting_DisableProblem" xml:space="preserve">
    <value>無効化: "{0}"</value>
  </data>
  <data name="Setting_HideAny" xml:space="preserve">
    <value>いずれかを非表示</value>
  </data>
  <data name="Setting_HideDescription" xml:space="preserve">
    <value>{0} - このオプションは全ての通知を非表示にしますが、建物の動作が維持されます。
{1} - 同じオプションですが、重要でない通知のみが非表示になります。
{2} - このオプションは建物の動作を変更して、建物に問題フラグを追加しません。</value>
  </data>
  <data name="Setting_HideNormal" xml:space="preserve">
    <value>通常は非表示で、重要な通知は表示</value>
  </data>
  <data name="Setting_HideType" xml:space="preserve">
    <value>非表示のオプション</value>
  </data>
  <data name="Setting_Remove" xml:space="preserve">
    <value>問題フラグを削除</value>
  </data>
  <data name="Setting_ToggleShortcut" xml:space="preserve">
    <value>表示の切り替え</value>
  </data>
</root>